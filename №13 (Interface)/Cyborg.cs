using System;

namespace CODE_BLOG__13
{
    public class Cyborg : ICar, IPerson // тут класс Cyborg реализует 2 интерфейса сразу, в которых есть методы с одинаковыми
                                        // названиями Move(), и мы можем одной реализацией закрыть 2 интерфейса сразу.
                                        // Но зачастую нам нужно разграничить поведение и для этого нам нужно явно реализовать
                                        // интерфейс, а именно дописав имя интерфейса перед именем метода.
    {
        int ICar.Move(int distance)//тут мы делаем разграничение по реализации дописав имя интерфейса ICar перед именем метода Move.
        {
            return distance / 100;
        }
        int IPerson.Move(int distance)// и тут мы делаем разграничение по реализации дописав имя интерфейса IPerson перед именем
        {                             // метода Move.
            return distance / 5;
        }




        public void Create()  // это последовательное наследование интерфейса от интерфейса, тоесть это реализация метода интерфейса 
        {                     // IObject так как интерфейс ICar наследник интерфейса IObject.
            throw new NotImplementedException();
        }



    }
}
