using System;

namespace CODE_BLOG__25_Атрибуты__Attribute__и_Рефлексия__Reflection_
{
    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Class)]
    class GeoAttribute : System.Attribute   //при создании атрибута сразу наследуемся от базового класса Атрибута
    {
        //и теперь мы можем указывать те доп. поля, тоесть ту доп. информацию которую мы хотим передать с мата-данными о нашей фотографии

        public int X { get; set; }
        public int Y { get; set; }

        public GeoAttribute()   //нужен конструктор чаще без параметров для установки значений свойств с помощью их имени
        {

        }
        // В чем особенность конструкторов для атрибутов - когда мы будем вызывать атрибут, если мы объявим наш класс атрибут без
        // конструктора тоесть у конструктора по умолчанию нет параметров, то мы сможем создавать атрибуты без параметров. Тоесть когда мы
        // объявляем конструктор без параметров, у нас задание этих свойств является не обязательным.

        public GeoAttribute(int x, int y)   //создадим конструктор с параметрами для возможности передачи параметров в атрибуте.
        {
            // проверяемт входные данны
            X = x;
            Y = y;
        }


        public override string ToString()
        {
            return $"[{X}; {Y}]";
        }






    }
}
